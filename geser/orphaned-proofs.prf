("gotoFail" gotoF setList_TCC2 0 (setList_TCC2-1 nil 3757492677 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF setList_TCC1 0 (setList_TCC1-1 nil 3757492677 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF getStorage_TCC2 0 (getStorage_TCC2-1 nil 3757492677 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF dec_TCC2 0 (dec_TCC2-1 nil 3757736724 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF inc_TCC2 0 (inc_TCC2-1 nil 3757736724 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF inc_TCC1 0 (inc_TCC1-1 nil 3757736724 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF setStorage_test_TCC1 0 (setStorage_test_TCC1-1 nil 3757736724 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF setStorage_TCC4 0 (setStorage_TCC4-1 nil 3757736724 ("" (termination-tcc) nil nil) nil nil))("gotoFail" gotoF setStorage_TCC3 0 (setStorage_TCC3-1 nil 3757736724 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF expandStorage_TCC2 0 (expandStorage_TCC2-1 nil 3757492677 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF setStorage_test 0 (setStorage_test-1 nil 3757497690 ("" (expand "setStorage") (("" (expand "setList") (("" (propax) nil nil)) nil)) nil) nil shostak))("gotoFail" gotoF nthList_size 0 (nthList_size-1 nil 3757511363 ("" (induct n :name "NAT_induction") (("1" (grind) (("1" (postpone) nil nil)) nil) ("2" (postpone) nil nil)) nil) nil shostak))("gotoFail" gotoF nthList_size_TCC1 0 (nthList_size_TCC1-1 nil 3757511362 ("" (induct n) (("1" (expand "nthList") (("1" (expand "length") (("1" (expand "length") (("1" (assert) nil nil)) nil)) nil)) nil) ("2" (skosimp) (("2" (expand nthList +) (("2" (assert) (("2" (grind) nil nil)) nil)) nil)) nil)) nil) ((posint_plus_nnint_is_posint application-judgement "posint" integers nil) (nnint_plus_posint_is_posint application-judgement "posint" integers nil) (real_lt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (nat_induction formula-decl nil naturalnumbers nil) (nthList def-decl "list[nat]" gotoF nil) (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil) (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil) (length def-decl "nat" list_props nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (every adt-def-decl "boolean" list_adt nil) (PRED type-eq-decl nil defined_types nil) (list type-decl nil list_adt nil) (< const-decl "bool" reals nil) (pred type-eq-decl nil defined_types nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (boolean nonempty-type-decl nil booleans nil) (number nonempty-type-decl nil numbers nil)) nil))("gotoFail" gotoF dec_test2 0 (dec_test2-1 nil 3757504449 ("" (expand "dec_gp2") (("" (expand "execute") (("" (grind) nil nil)) nil)) nil) ((execute def-decl "Storage" gotoF nil) (empty_storage const-decl "Storage" gotoF nil) (stop const-decl "Transition" gotoF nil) (nth def-decl "T" list_props nil) (length def-decl "nat" list_props nil) (nthList def-decl "list[nat]" gotoF nil) (append def-decl "list[T]" list_props nil) (expandStorage const-decl "[Storage, nat -> Storage]" gotoF nil) (getStorage const-decl "[Storage, nat -> nat]" gotoF nil) (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil) (dec const-decl "[nat -> Transition]" gotoF nil) (id const-decl "(bijective?[T, T])" identity nil) (real_lt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs nil) (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs nil) (int_plus_int_is_int application-judgement "int" integers nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (dec_gp2 const-decl "Gp" gotoF nil)) shostak))("gotoFail" gotoF dec_test2_TCC2 0 (dec_test2_TCC2-1 nil 3757609743 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF dec_test2_TCC1 0 (dec_test2_TCC1-1 nil 3757504441 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF dec_test1 0 (dec_test1-1 nil 3757502029 ("" (expand "dec_gp1") (("" (expand "execute") (("" (expand "nth") (("" (expand "dec") (("" (expand "length") (("" (expand "length") (("" (expand "stop?") (("" (expand "execute") (("" (expand "nth") (("" (expand "nth") (("" (expand "stop") (("" (expand "stop?") (("" (expand "id") (("" (expand "expandStorage") (("" (expand "length") (("" (expand "max") (("" (expand "getStorage") (("" (expand "nth") (("" (expand "nth") (("" (expand "setStorage") (("" (expand "setList") (("" (expand "setList") (("" (propax) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) ((execute def-decl "Storage" gotoF nil) (dec const-decl "[nat -> Transition]" gotoF nil) (expandStorage const-decl "[Storage, nat -> Storage]" gotoF nil) (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil) (getStorage const-decl "[Storage, nat -> nat]" gotoF nil) (id const-decl "(bijective?[T, T])" identity nil) (stop const-decl "Transition" gotoF nil) (length def-decl "nat" list_props nil) (nth def-decl "T" list_props nil) (dec_gp1 const-decl "Gp" gotoF nil)) shostak))("gotoFail" gotoF dec_test1_TCC2 0 (dec_test1_TCC2-1 nil 3757609743 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF dec_test1_TCC1 0 (dec_test1_TCC1-1 nil 3757502028 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF dec_gp1_TCC2 0 (dec_gp1_TCC2-1 nil 3757502253 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF dec_gp1_TCC1 0 (dec_gp1_TCC1-1 nil 3757502028 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF inc_all 0 (inc_all-1 nil 3757510743 ("" (induct i) (("1" (grind) nil nil) ("2" (grind) nil nil) ("3" (skolem!) (("3" (grind) (("3" (postpone) nil nil)) nil)) nil) ("4" (postpone) nil nil)) nil) nil shostak))("gotoFail" gotoF inc_all_TCC3 0 (inc_all_TCC3-1 nil 3757609743 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF inc_all_TCC2 0 (inc_all_TCC2-1 nil 3757504441 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF inc_all_TCC1 0 (inc_all_TCC1-1 nil 3757504441 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF inc_test 0 (inc_test-2 "" 3757695373 ("" (expand "inc_gp") (("" (expand "execute") (("" (expand "running?") (("" (expand "length") (("" (expand "length") (("" (expand "length") (("" (expand "nth") (("" (expand "inc") (("" (postpone) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) nil shostak) (inc_test-1 nil 3757498099 ("" (expand "inc_gp") (("" (expand "execute") (("" (expand "nth") (("" (expand "inc") (("" (expand "empty_storage") (("" (expand "length") (("" (expand "stop?") (("" (expand "execute") (("" (expand "nth") (("" (expand "nth") (("" (expand "stop") (("" (expand "id") (("" (expand "stop?") (("" (expand "expandStorage") (("" (expand "length") (("" (expand "nthList") (("" (expand "nthList") (("" (expand "nthList") (("" (expand "append") (("" (expand "getStorage") (("" (expand "nth") (("" (expand "nth") (("" (expand "setStorage") (("" (expand "setList") (("" (expand "setList") (("" (propax) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) ((execute def-decl "Storage" gotoF nil) (inc const-decl "[nat -> Transition]" gotoF nil) (length def-decl "nat" list_props nil) (id const-decl "(bijective?[T, T])" identity nil) (expandStorage const-decl "[Storage, nat -> Storage]" gotoF nil) (nthList def-decl "list[nat]" gotoF nil) (getStorage const-decl "[Storage, nat -> nat]" gotoF nil) (append def-decl "list[T]" list_props nil) (stop const-decl "Transition" gotoF nil) (empty_storage const-decl "Storage" gotoF nil) (nth def-decl "T" list_props nil) (inc_gp const-decl "Gp" gotoF nil)) shostak))("gotoFail" gotoF inc_test_TCC2 0 (inc_test_TCC2-1 nil 3757609743 ("" (subtype-tcc) nil nil) nil nil))("gotoFail" gotoF inc_test_TCC1 0 (inc_test_TCC1-1 nil 3757498097 ("" (subtype-tcc) nil nil) nil nil))